# Copyright 2021 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause

---
resources:
  - name: source
    type: git
    icon: github
    source:
      uri: git@github.com:vmware-labs/marketplace-cli.git
      private_key: ((github.private_key))
      branch: main

  - name: version
    type: semver
    icon: github
    source:
      driver: git
      uri: git@github.com:vmware-labs/marketplace-cli.git
      private_key: ((github.private_key))
      branch: main
      file: version
      commit_message: "[ci skip] bump version to %version%"

  - name: mkpcli
    type: registry-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/tanzu_isv_engineering/mkpcli
      username: ((harbor.username))
      password: ((harbor.token))

  - name: mkpcli-public
    type: registry-image
    icon: docker
    source:
      repository: projects.registry.vmware.com/tanzu_isv_engineering/mkpcli
      username: ((harbor-public.username))
      password: ((harbor-public.token))

  - name: release
    type: github-release
    icon: github
    source:
      owner: vmware-labs
      repository: marketplace-cli
      access_token: ((github.access_token))

  - name: test-container-product-source
    type: git
    icon: gitlab
    source:
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      paths:
        - test-container-product/*
        - test-container-product/**

  - name: test-container-product-version
    type: semver
    icon: gitlab
    source:
      driver: git
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      file: test-container-product/version
      commit_message: "[ci skip] Updating to version %version%"

  - name: test-container-product
    type: docker-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/tanzu_isv_engineering/test-container-product
      username: ((harbor.username))
      password: ((harbor.token))

  - name: test-chart-product-source
    type: git
    icon: gitlab
    source:
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      paths:
        - test-chart-product/*
        - test-chart-product/**

  - name: test-chart-product-version
    type: semver
    icon: gitlab
    source:
      driver: git
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      file: test-chart-product/version
      commit_message: "[ci skip] Updating to version %version%"

  - name: test-ova-product-source
    type: git
    icon: gitlab
    source:
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      paths:
        - test-ova-product/*
        - test-ova-product/**

  - name: test-ova-product-version
    type: semver
    icon: gitlab
    source:
      driver: git
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      file: test-ova-product/version
      commit_message: "[ci skip] Updating to version %version%"

  - name: daily
    type: time
    icon: clock-outline
    source:
      start: 5:00 AM
      stop:  6:00 PM
      location: US/Central

jobs:
  - name: test
    plan:
      - get: daily
        trigger: true
      - get: source
        trigger: true
      - task: run-tests
        file: source/ci/tasks/test.yaml
        params:
          CSP_API_TOKEN: ((marketplace_api_token))
          MARKETPLACE_ENV: staging

  - name: build
    serial_groups: [version]
    plan:
      - in_parallel:
          - get: source
            passed:
              - test
            trigger: true
          - get: version
            params:
              bump: patch
      - task: build-cli
        file: source/ci/tasks/build.yaml
      - task: build-image
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: harbor-repo.vmware.com/dockerhub-proxy-cache/concourse/oci-build-task
              username: ((harbor.username))
              password: ((harbor.token))
          inputs:
            - name: build
            - name: source
          outputs:
            - name: image
          params:
            DOCKERFILE: source/Dockerfile
          run:
            path: build

      - put: mkpcli
        inputs: [image, version]
        params:
          image: image/image.tar
          additional_tags: version/version  # Update the parameter list if/when concourse is updated
      - put: release
        inputs: [build, source, version]
        params:
          name: version/version
          tag: version/version
          commitish: source/.git/ref
          globs:
            - build/*
      - put: version
        inputs: detect
        params:
          file: version/version

#  - name: bump-major-version
#    serial_groups: [version]
#    plan:
#      - put: version
#        inputs: detect
#        params:
#          bump: major
#
#  - name: bump-minor-version
#    serial_groups: [version]
#    plan:
#      - put: version
#        inputs: detect
#        params:
#          bump: minor

  - name: test-container-product
    plan:
      - in_parallel:
          - get: source
            resource: test-container-product-source
            trigger: true
          - get: version
            resource: test-container-product-version
            params: { bump: patch }
          - get: mkpcli
            trigger: true
            passed:
              - build
          - get: mkpcli-version
            resource: version
            passed:
              - build
      - put: test-container-product
        inputs: all
        params:
          build: .
          dockerfile: source/test-container-product/Dockerfile
          tag_file: version/version
          tag_as_latest: true
      - put: test-container-product-version
        inputs: detect
        params:
          file: version/version
      - task: add-version-to-marketplace
        image: mkpcli
        config:
          inputs:
            - name: version
          platform: linux
          params:
            CSP_API_TOKEN: ((marketplace_api_token))
            MARKETPLACE_ENV: staging
            SLUG: test-container-product-21
          run:
            path: bash
            args:
              - -exc
              - |
                mkpcli product-version create --product ${SLUG} --product-version $(cat version/version)
      - task: add-container-image-to-marketplace
        image: mkpcli
        config:
          inputs:
            - name: test-container-product
            - name: version
          platform: linux
          params:
            CSP_API_TOKEN: ((marketplace_api_token))
            MARKETPLACE_ENV: staging
            SLUG: test-container-product-21
          run:
            path: bash
            args:
              - -exc
              - |
                mkpcli container-image create \
                  --product ${SLUG} \
                  --product-version $(cat version/version) \
                  --image-repository $(cat test-container-product/repository) \
                  --image-tag $(cat version/version) \
                  --image-tag-type FIXED \
                  --deployment-instructions "docker run $(cat test-container-product/repository):$(cat version/version)"

  - name: test-chart-product
    plan:
      - in_parallel:
          - get: source
            resource: test-chart-product-source
            trigger: true
          - get: version
            resource: test-chart-product-version
            params: { bump: patch }
          - get: mkpcli
            trigger: true
            passed:
              - build
          - get: mkpcli-version
            resource: version
            passed:
              - build
      - task: publish-chart
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: harbor-repo.vmware.com/dockerhub-proxy-cache/alpine/helm
              username: ((harbor.username))
              password: ((harbor.token))
          inputs:
            - name: source
            - name: version
          params:
            HARBOR_USERNAME: ((harbor.username))
            HARBOR_PASSWORD: ((harbor.token))
          run:
            path: sh
            dir: source/test-chart-product
            args:
              - -exc
              - |
                apk add git
                export VERSION=$(cat ../../version/version)
                helm package test-chart-product --version ${VERSION}
                helm repo add \
                    --username ${HARBOR_USERNAME} \
                    --password ${HARBOR_PASSWORD} \
                    tanzu_isv_engineering \
                    https://harbor-repo.vmware.com/chartrepo/tanzu_isv_engineering
                helm plugin install https://github.com/chartmuseum/helm-push
                helm push test-chart-product-${VERSION}.tgz tanzu_isv_engineering
      - put: test-chart-product-version
        inputs: detect
        params:
          file: version/version
      - task: add-version-to-marketplace
        image: mkpcli
        config:
          inputs:
            - name: version
          platform: linux
          params:
            CSP_API_TOKEN: ((marketplace_api_token))
            MARKETPLACE_ENV: staging
            SLUG: test-chart-product-21
          run:
            path: bash
            args:
              - -exc
              - |
                mkpcli product-version create --product ${SLUG} --product-version $(cat version/version)
      - task: add-chart-to-marketplace
        image: mkpcli
        config:
          inputs:
            - name: version
          platform: linux
          params:
            CSP_API_TOKEN: ((marketplace_api_token))
            MARKETPLACE_ENV: staging
            SLUG: test-chart-product-21
          run:
            path: bash
            args:
              - -exc
              - |
                mkpcli chart create \
                  --product ${SLUG} \
                  --product-version $(cat version/version) \
                  --chart-name tanzu_isv_engineering/test-chart-product-${VERSION} \
                  --chart-version ${VERSION} \
                  --chart-url https://harbor-repo.vmware.com/chartrepo/tanzu_isv_engineering/charts/test-chart-product-${VERSION}.tgz \
                  --repository-name tanzu_isv_engineering \
                  --repository-url https://harbor-repo.vmware.com/chartrepo/tanzu_isv_engineering

  - name: test-ova-product
    plan:
      - in_parallel:
          - get: source
            resource: test-ova-product-source
            trigger: true
          - get: version
            resource: test-ova-product-version
            params: { bump: patch }
          - get: mkpcli
            trigger: true
            passed:
              - build
          - get: mkpcli-version
            resource: version
            passed:
              - build
      - put: test-ova-product-version
        inputs: detect
        params:
          file: version/version
      - task: download-ova
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: harbor-repo.vmware.com/dockerhub-proxy-cache/library/buildpack-deps
              tag: buster
              username: ((harbor.username))
              password: ((harbor.token))
          inputs:
            - name: source
          outputs:
            - name: source
          run:
            path: make
            dir: source/test-ova-product
            args: [ check ]
      - task: add-version-to-marketplace
        image: mkpcli
        config:
          inputs:
            - name: version
          platform: linux
          params:
            CSP_API_TOKEN: ((marketplace_api_token))
            MARKETPLACE_ENV: staging
            SLUG: test-ova-product-11
          run:
            path: bash
            args:
              - -exc
              - |
                mkpcli product-version create --product ${SLUG} --product-version $(cat version/version)
      - task: add-ova-to-marketplace
        image: mkpcli
        config:
          inputs:
            - name: source
            - name: version
          platform: linux
          params:
            CSP_API_TOKEN: ((marketplace_api_token))
            MARKETPLACE_ENV: staging
            SLUG: test-ova-product-11
          run:
            path: bash
            args:
              - -exc
              - |
                mkpcli ova create \
                  --product ${SLUG} \
                  --product-version $(cat version/version) \
                  --ova-file source/test-ova-product/*.ova

  - name: publish
    plan:
      - get: mkpcli
        trigger: true
        passed:
          - test-chart-product
          - test-container-product
          - test-ova-product
        params:
          format: oci
      - get: version
        passed:
          - test-chart-product
          - test-container-product
          - test-ova-product
      - put: mkpcli-public
        params:
          image: mkpcli/image.tar
          additional_tags: version/version